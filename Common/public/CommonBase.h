// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.1.0.
// **********************************************************************

#ifndef __COMMONBASE_H_
#define __COMMONBASE_H_

#include <map>
#include <string>
#include <vector>
#include "tup/Tars.h"
using namespace std;


namespace Common
{
    enum ReturnCode
    {
        eOk = 0,
        eUnknownError = -1,
        eOtherError = -2,
        eArgError = -3,
        eDbError = -4,
        eAppidError = -5,
        eTimestampError = -6,
    };
    inline string etos(const ReturnCode & e)
    {
        switch(e)
        {
            case eOk: return "eOk";
            case eUnknownError: return "eUnknownError";
            case eOtherError: return "eOtherError";
            case eArgError: return "eArgError";
            case eDbError: return "eDbError";
            case eAppidError: return "eAppidError";
            case eTimestampError: return "eTimestampError";
            default: return "";
        }
    }
    inline int stoe(const string & s, ReturnCode & e)
    {
        if(s == "eOk")  { e=eOk; return 0;}
        if(s == "eUnknownError")  { e=eUnknownError; return 0;}
        if(s == "eOtherError")  { e=eOtherError; return 0;}
        if(s == "eArgError")  { e=eArgError; return 0;}
        if(s == "eDbError")  { e=eDbError; return 0;}
        if(s == "eAppidError")  { e=eAppidError; return 0;}
        if(s == "eTimestampError")  { e=eTimestampError; return 0;}

        return -1;
    }


}



#endif
